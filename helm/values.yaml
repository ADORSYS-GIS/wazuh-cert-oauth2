# Default values for wazuh-cert-oauth2.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

##
##
image:
  ##
  ##
  registry: ghcr.io
  ##
  ##
  repository: adorsys-gis/wazuh-cert-oauth2
  tag: 'latest'
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: Always
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: [ ]

## Common annotations
commonAnnotations: { }

## Common labels
commonLabels: { }

ports:
  - name: http
    containerPort: '{{ .Values.service.port }}'
    protocol: TCP

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  ##
  ##
  type: ClusterIP
  ##
  ##
  additionalLabels: { }
  ##
  ##
  additionalAnnotations: { }
  ##
  ##
  loadBalancerClass: ""
  ##
  ##
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  tls: true
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

env:
  - name: RUST_LOG
    value: "info"
  - name: OAUTH_ISSUER
    value: "https://accounts.ssegning.com/realms/adorsys"
  - name: KC_AUDIENCES
    value: "account"
  - name: ROOT_CA_PATH
    value: "/usr/share/wazuh-cert-oauth2/certs/root-ca.pem"
  - name: ROOT_CA_KEY_PATH
    value: "/usr/share/wazuh-cert-oauth2/certs/root-ca-key.pem"
  - name: ROCKET_ADDRESS
    value: "0.0.0.0"

envFrom: []

nodeSelector: {}

tolerations: []

affinity: {}
