name: Build Docker image

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/build.yml'
      - 'crates/wazuh-cert-oauth2-server/**'
      - 'crates/wazuh-cert-oauth2-metrics/**'
      - 'crates/wazuh-cert-oauth2-model/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'Dockerfile'
      - '.dockerignore'

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ADORSYS-GIS/wazuh-cert-oauth2

jobs:
  build:
    name: Docker build for ${{ matrix.flavor }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavour:
          - OAuth2
          - Webhook
        include:
          - flavour: OAuth2
            suffix: ""
            docker_target: "oauth2"
          - flavour: Webhook
            suffix: "-webhook"
            docker_target: "webhook"
    permissions:
      packages: write
      contents: read
      id-token: write # Required to sign SLSA provenance

    steps:
      - uses: actions/checkout@v5
        name: Checkout repository
        with:
          fetch-depth: "0"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the Docker registry
        id: login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: lowercase
        name: Lowercase image name
        uses: AsZc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}}
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Europe/Berlin'}}
            type=sha,format=long
            type=sha,format=long,prefix={{branch}}
          images: ${{ env.REGISTRY }}/${{ steps.lowercase.outputs.lowercase }}${{ matrix.suffix }}

      - name: Cache Docker layers
        uses: actions/cache@4
        if: always()
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.flavor }}-

      - name: Build and push
        uses: docker/build-push-action@v6
        if: github.event_name != 'pull_request'
        with:
          context: .
          file: "Dockerfile"
          push: "true"
          target: ${{ matrix.docker_target }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          provenance: true
          sbom: true
